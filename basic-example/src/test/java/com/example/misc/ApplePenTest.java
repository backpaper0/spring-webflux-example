package com.example.misc;

import java.time.Duration;

import org.junit.jupiter.api.Test;

import reactor.core.publisher.Mono;
import reactor.test.StepVerifier;

class ApplePenTest {

    private final ApplePen ap = new ApplePen();

    @Test
    void badExample() {
        StepVerifier.withVirtualTime(() -> {
            final var pen = ap.getPen();
            final var apple = ap.getApple();

            return apple.flatMap(a -> pen.map(p -> a + p));
        })
                .expectSubscription()
                .expectNoEvent(Duration.ofSeconds(6)) //6秒かかる
                .expectNext("ApplePen")
                .verifyComplete();
    }

    @Test
    void goodExample() {
        StepVerifier.withVirtualTime(() -> {
            final var pen = ap.getPen();
            final var apple = ap.getApple();

            return apple.zipWith(pen, String::concat);
        })
                .expectSubscription()
                .expectNoEvent(Duration.ofSeconds(3)) //appleとpenを平行処理して3秒で終えられる
                .expectNext("ApplePen")
                .verifyComplete();
    }

    private static class ApplePen {

        Mono<String> getPen() {
            return Mono.just("Pen").delayElement(Duration.ofSeconds(3));
        }

        Mono<String> getApple() {
            return Mono.just("Apple").delayElement(Duration.ofSeconds(3));
        }
    }
}
